-- ============================================================================
-- migration: create motivational_messages table
-- description: creates table for ai-generated motivational messages
--              with rls policies and indexes
-- author: housework master team
-- date: 2025-10-18
-- ============================================================================
-- affected tables: motivational_messages
-- dependencies: tasks
-- notes: 
--   - uses uuid primary keys for better supabase integration
--   - cascade delete ensures data consistency
--   - rls policies restrict access via task ownership
--   - enforces 500 character limit on message text
--   - immutable messages - no update trigger needed
-- ============================================================================

-- ============================================================================
-- table: motivational_messages
-- description: stores ai-generated motivational messages for tasks
-- ============================================================================

create table public.motivational_messages (
  id uuid primary key default gen_random_uuid(),
  task_id uuid not null references public.tasks(id) on delete cascade,
  message_text text not null check(length(message_text) <= 500),
  generated_at timestamp with time zone not null default now()
);

-- add comments explaining table and columns
comment on table public.motivational_messages is 'stores history of ai-generated motivational messages for tasks';
comment on column public.motivational_messages.id is 'unique identifier for the message';
comment on column public.motivational_messages.task_id is 'foreign key to the task this message is for';
comment on column public.motivational_messages.message_text is 'ai-generated motivational message content (max 500 characters)';
comment on column public.motivational_messages.generated_at is 'timestamp when message was generated by ai';

-- create indexes for efficient message retrieval
create index idx_motivational_messages_task_id on public.motivational_messages(task_id);
create index idx_motivational_messages_task_generated on public.motivational_messages(task_id, generated_at desc);

-- ============================================================================
-- row level security: enable rls on motivational_messages table
-- description: ensures users can only access messages for their own tasks
-- ============================================================================

-- enable rls on motivational_messages table
-- warning: enabling rls will block all access until policies are created
alter table public.motivational_messages enable row level security;

-- ============================================================================
-- rls policies: motivational_messages table
-- description: granular policies checking task ownership via join
-- ============================================================================

-- policy: authenticated users can view messages for their own tasks
-- note: checks ownership via tasks.user_id
create policy "authenticated users can select messages for their own tasks"
  on public.motivational_messages
  for select
  to authenticated
  using (
    exists (
      select 1 from public.tasks 
      where tasks.id = task_id 
      and tasks.user_id = auth.uid()
    )
  );

-- policy: authenticated users can create messages for their own tasks
-- note: validates user owns the task via subquery
create policy "authenticated users can insert messages for their own tasks"
  on public.motivational_messages
  for insert
  to authenticated
  with check (
    exists (
      select 1 from public.tasks 
      where tasks.id = task_id 
      and tasks.user_id = auth.uid()
    )
  );

-- policy: authenticated users can update messages for their own tasks
create policy "authenticated users can update messages for their own tasks"
  on public.motivational_messages
  for update
  to authenticated
  using (
    exists (
      select 1 from public.tasks 
      where tasks.id = task_id 
      and tasks.user_id = auth.uid()
    )
  )
  with check (
    exists (
      select 1 from public.tasks 
      where tasks.id = task_id 
      and tasks.user_id = auth.uid()
    )
  );

-- policy: authenticated users can delete messages for their own tasks
create policy "authenticated users can delete messages for their own tasks"
  on public.motivational_messages
  for delete
  to authenticated
  using (
    exists (
      select 1 from public.tasks 
      where tasks.id = task_id 
      and tasks.user_id = auth.uid()
    )
  );

-- ============================================================================
-- migration complete: motivational_messages table
-- ============================================================================

